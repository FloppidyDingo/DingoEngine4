#pragma once
#include <string>

const std::string vertexSource =
"#version 330\n"
"\n"
"layout(location = 0) in vec3 pos;\n"
"layout(location = 1) in vec2 aTexCoord;\n"
"layout(location = 2) in float opacity;\n"
"\n"
"out vec2 TexCoord;\n"
"out vec2 FragPos;\n"
"out float opac;\n"
"\n"
"void main()\n"
"{\n"
"    gl_Position = vec4(pos, 1.0); // see how we directly give a vec3 to vec4's constructor\n"
"\tFragPos = vec3(vec4(pos, 1.0)).xy;\n"
"\tTexCoord = aTexCoord;\n"
"\topac = opacity;\n"
"}";

const std::string guifragmentSource =
"#version 330\n"
"#define MAX_LIGHTS 24\n"
"\n"
"uniform sampler2D tile;\n"
"\n"
"in vec2 TexCoord;\n"
"in float opac;\n"
"\n"
"out vec4 FragColor;\n"
"\n"
"//prototype for point light function\n"
"\n"
"void main(){\n"
"\tFragColor = texture(tile, TexCoord) * opac;\n"
"}";

const std::string entfragmentSource = 
"#version 330\n"
"#define MAX_LIGHTS 24\n"
"\n"
"uniform sampler2D tile;\n"
"uniform float[(MAX_LIGHTS * 8) + 1] Lights; //Light format: Type R G B b x y r\n"
"\n"
"in vec2 TexCoord;\n"
"in vec2 FragPos;\n"
"in float opac;\n"
"\n"
"out vec4 FragColor;\n"
"\n"
"vec4 temp4;\n"
"vec4 lightColor;\n"
"vec2 temp2;\n"
"float tempf;\n"
"float temptype;\n"
"\n"
"\n"
"void main(){\n"
"\tfor(int i = 0; i < MAX_LIGHTS * 8; i++){\n"
"\t\ttemptype = Lights[i];\n"
"\t\tswitch (int(temptype)){\n"
"\t\t\tcase 0:{ //NOP\n"
"\t\t\t\ti += 7;\n"
"\t\t\t\tbreak;\n"
"\t\t\t}\n"
"\t\t\tcase 1:{ //ambient\n"
"\t\t\t\ttemp4.r = Lights[i + 1];\n"
"\t\t\t\ttemp4.g = Lights[i + 2];\n"
"\t\t\t\ttemp4.b = Lights[i + 3];\n"
"\t\t\t\ttemp4.a = Lights[i + 4];\n"
"\t\t\t\tlightColor = mix(lightColor, temp4, temp4.a);\n"
"\t\t\t\ti += 7;\n"
"\t\t\t\tbreak;\n"
"\t\t\t}\n"
"\t\t\tcase 2:{ //point light\n"
"\t\t\t\ttemp4.r = Lights[i + 1];\n"
"\t\t\t\ttemp4.g = Lights[i + 2];\n"
"\t\t\t\ttemp4.b = Lights[i + 3];\n"
"\t\t\t\ttemp4.a = Lights[i + 4];\n"
"\t\t\t\ttemp2.x = Lights[i + 5];\n"
"\t\t\t\ttemp2.y = Lights[i + 6];\n"
"\t\t\t\ttempf = Lights[i + 7];\n"
"\t\t\t\tif(sqrt(pow(FragPos.x - temp2.x, 2) + pow(FragPos.y - temp2.y, 2)) < tempf){\n"
"\t\t\t\t\tlightColor = mix(lightColor, temp4, temp4.a);\n"
"\t\t\t\t}\n"
"\t\t\t\ti += 7;\n"
"\t\t\t\tbreak;\n"
"\t\t\t}\n"
"\t\t\tcase 3:{ //light exit\n"
"\t\t\t\ti = MAX_LIGHTS * 8;\n"
"\t\t\t\tbreak;\n"
"\t\t\t}\n"
"\t\t}\n"
"\t}\n"
"\tFragColor = lightColor * texture(tile, TexCoord) * opac;\n"
"}";

const unsigned int MAX_LIGHTS = 24;
const unsigned int LOC_POS = 0;
const unsigned int LOC_TEX = 1;
const unsigned int LOC_OPAC = 2;